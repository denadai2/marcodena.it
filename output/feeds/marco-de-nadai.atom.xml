<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Marco De Nadai</title><link href="/" rel="alternate"></link><link href="/feeds/marco-de-nadai.atom.xml" rel="self"></link><id>/</id><updated>2014-08-09T10:20:00+02:00</updated><entry><title>Wordpress? The future is static</title><link href="/wordpress-the-future-is-static.html" rel="alternate"></link><updated>2014-08-09T10:20:00+02:00</updated><author><name>Marco De Nadai</name></author><id>tag:,2014-08-09:wordpress-the-future-is-static.html</id><summary type="html">&lt;p&gt;I was a PHP developer and I lived the blog fashion bubble when everyone made blogs, 
even talking about non-sense. Since that "era" &lt;a href="http://www.wordpress.org"&gt;Wordpress&lt;/a&gt;
established the "standard de-facto" of the blogging platforms. Wordpress is highly
customizable (it has more than 15'000 of plugins), it is used by high profile
websites like &lt;a href="http://www.observer.com/"&gt;The New York Observer&lt;/a&gt; and someone is even
using it as CMS.&lt;/p&gt;
&lt;p&gt;As I said I am a developer since many years ago and I barely managed to build this
portfolio, because usually we have time for others but not for ourselves. Moreover I 
easily get tired: upgrades? bugs? exploits? I really can't handle all these things
anymore, also because I don't use Wordpress anywhere but here.&lt;/p&gt;
&lt;p&gt;I also saw the evolution of Wordpress: from a small and not well written script, 
it became a fancy not well written OOP script. &lt;/p&gt;
&lt;p&gt;Here are some &lt;strong&gt;cons about Wordpress&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exploits! Do you have time to keep it updated? Do you really trust the auto-update
 feature? Be prepared to backup and restore everything.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WYSIWYG?&lt;/strong&gt; I never even liked to write within the administration panel: every time I needed to change the blog template (font), the WYSIWYG was displaying the horrible Times new roman font, misleading me about the real appareances of the post.&lt;/li&gt;
&lt;li&gt;slow: do you really think that in the age when &lt;a href="http://www.mattcutts.com/blog/site-speed/"&gt;Google incorporates site speed in search
 rankings&lt;/a&gt; you are safe? Are you thinking
 about having a high-traffic website? You don't have money to waste?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For all these reasons I came out with static site generators. After half a decade when
people were obsessed by dynamicity, we are finally going back to site generators like
&lt;a href="http://jekyllrb.com/"&gt;Jenkill&lt;/a&gt;, officially supported and &lt;a href="https://github.com/blog/1867-github-pages-now-runs-jekyll-2-2-0"&gt;used by Github&lt;/a&gt; and &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;, the script
used to generate this website. Even thought Jenkill is almost complete, I must admit
that I don't know Ruby and that I prefer the &lt;a href="http://docs.getpelican.com/en/3.4.0/index.html"&gt;Pelican documentation&lt;/a&gt;. Pelican is written in Python.&lt;/p&gt;
&lt;p&gt;These are some &lt;strong&gt;pro of Pelican&lt;/strong&gt; (but they are applicable to all the static website generators):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fast! As it will be explained later, all the speed problems will be solved.&lt;/li&gt;
&lt;li&gt;no database required. &lt;/li&gt;
&lt;li&gt;Users will use a simple text editor and &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;
 syntax to write.&lt;/li&gt;
&lt;li&gt;cheap and easy to host practically anywhere. Amazon S3 and &lt;a href="http://pages.github.com/"&gt;Github pages&lt;/a&gt; (free)
 are the most used choices.&lt;/li&gt;
&lt;li&gt;websites are easy to secure, maintain and scale.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to start&lt;/h2&gt;
&lt;p&gt;The best way to start is understanding how easy is to make a blog. The &lt;a href="http://docs.getpelican.com/en/3.4.0/quickstart.html"&gt;quickstart&lt;/a&gt; is very comprensive. First of all some Python packages are necessary.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The second step is generating the basic structure of the blog.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now it is time to write the &lt;strong&gt;first article&lt;/strong&gt; in Markdown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;

&lt;span class="n"&gt;Following&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;favorite&lt;/span&gt; &lt;span class="n"&gt;mechanical&lt;/span&gt; &lt;span class="n"&gt;keyboard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And save it to "~/projects/yoursite/content/keyboard-review.md". The "content"
directory is made for all the posts and pages and it will not change even if the
blog will be revolutionized.
From the "~/projects/yoursite/" directory, you can launch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The static HTML files will be generated in the output directory. To visit your new
website, just launch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;SimpleHTTPServer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And navigate http://localhost:8000/ in your browser.&lt;/p&gt;
&lt;h2&gt;Performances&lt;/h2&gt;
&lt;p&gt;I am a nerd, I like performances benchmarks. In this plot it is possible to find the performance
of Wordpress and Pelican in a simple hosting of gandi.net, but also Pelican (stati HTMLs) in Amazon S3.&lt;/p&gt;
&lt;p&gt;&lt;img alt="benchmarks" src="/images/benchmark.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt; the tests are made with &lt;a href="http://httpd.apache.org/docs/2.2/programs/ab.html"&gt;Apache ab&lt;/a&gt; via Internet,
so the performance is also affected by the speed of the connection and the congestion on the moment
of the test. I am sorry but I could not set up a local server in my PC.&lt;/p&gt;</summary></entry><entry><title>asdsadasd asd aMy First Review</title><link href="/asdsadasd-asd-amy-first-review.html" rel="alternate"></link><updated>2010-12-03T10:20:00+01:00</updated><author><name>Marco De Nadai</name></author><id>tag:,2010-12-03:asdsadasd-asd-amy-first-review.html</id><summary type="html">&lt;p&gt;Following is a review of my favorite mechanical keyboard.&lt;/p&gt;</summary></entry></feed>
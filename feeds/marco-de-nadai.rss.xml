<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Marco De Nadai</title><link>http://www.marcodena.it/</link><description></description><atom:link href="http://www.marcodena.it/feeds/marco-de-nadai.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 07 Sep 2014 10:20:00 +0200</lastBuildDate><item><title>Detecting anomalies with Neural Networks</title><link>http://www.marcodena.it/detecting-anomalies-with-neural-newtorks</link><description>&lt;p&gt;In this article I will show part of the work I've done during my Master's internship in Amsterdam. The focus of this work was finding outliers in the gas consumption of some buildings. &lt;/p&gt;
&lt;p&gt;Energy consumption in buildings is one of the fastest growing sectors. Approximately &lt;strong&gt;41% of the total energy&lt;/strong&gt; in Europe is consumed by buildings (households and services). It is showed that &lt;strong&gt;commercial buildings consume from 15% to 30% more energy than necessary&lt;/strong&gt; due to poorly maintained, degraded, and improperly controlled equipment. These anomalies can become easy fixable problems with a reliable fault detection and diagnosis (FDD) system. &lt;/p&gt;
&lt;p&gt;An outlier, by definition, is an observation which deviates significantly from other observations so that it creates suspicion that it was created by different dynamics. Despite this general definition, the more appropriate way of defining
outliers is highly application-dependent, because even same scenarios may require different determinations of outliers.&lt;/p&gt;
&lt;p&gt;In this paper, outliers are very closed related to the problem of time-series forecasting, since outliers are declared on the basis of deviations from expected (or forecast) value.&lt;/p&gt;
&lt;p&gt;&lt;img alt="outliers" src="/images/outliers.png" /&gt;&lt;/p&gt;
&lt;p&gt;The system is composed by 2-phase process where in the first one the short-term (hourly) gas consumption is
forecast thanks to a historical time-series, and in the second phase outliers are detected on the basis of deviations from expected (or forecast) value.&lt;/p&gt;
&lt;h2&gt;iPython Notebooks&lt;/h2&gt;
&lt;p&gt;In these notebooks the dataset is analysed, then it is used by an Artificial Neural Network built in &lt;a href="https://github.com/lisa-lab/pylearn2"&gt;pylearn2&lt;/a&gt;. This project uses Python with &lt;a href="http://pandas.pydata.org/"&gt;pandas&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/denadai2/energyUva/blob/master/notebooks/0-Data%2BWeather%2BHolidays.ipynb"&gt;Dataset preparation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/denadai2/energyUva/blob/master/notebooks/1-Dataset_cleaning.ipynb"&gt;Dataset cleaning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/denadai2/energyUva/blob/master/notebooks/2-Dataset%20analysis.ipynb"&gt;Dataset analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/denadai2/energyUva/blob/master/notebooks/3-Feature%20engineering.ipynb"&gt;Feature engineering&lt;/a&gt;. &lt;a href="http://nbviewer.ipython.org/github/denadai2/energyUva/blob/master/notebooks/3bis-%20Regression%20short%20version.ipynb"&gt;Short version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/denadai2/energyUva/blob/master/NN_static_MLSE.yaml"&gt;pylearn2 YAML file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;This model was able to detect some synthetic and real outliers from the dataset.  Since the predictor is very accurate (with RMSE from 8 m^3 in building 740-NTH, to RMSE 2.5 m^3 in building 761-KMH), the outlier mechanism is able to easily detect strange behaviours defining a threshold value in the confidence interval without the need to possess previous examples of outliers. The scope of this paper was forecasting the highly irregular gas consumption time-series, but it is believed that similar results could be also obtained with electric consumption time-series. It is hoped that this could lead to new analysis of the energy consumption in public buildings.&lt;/p&gt;
&lt;p&gt;The draft of the &lt;strong&gt;paper&lt;/strong&gt; can be found &lt;a href="https://github.com/denadai2/energyUva/blob/master/paperEnergy/paperv2_2.pdf"&gt;here&lt;/a&gt;, while the sources are in this &lt;a href="https://github.com/denadai2/energyUva"&gt;github project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The paper is still a draft, so I would really like to listen your opinion, notes, doubts. Please, drop a note here!&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco De Nadai</dc:creator><pubDate>Sun, 07 Sep 2014 10:20:00 +0200</pubDate><guid>tag:www.marcodena.it,2014-09-07:detecting-anomalies-with-neural-newtorks</guid></item><item><title>Stop remembering passwords</title><link>http://www.marcodena.it/blog/stop-remembering-passwords/</link><description>&lt;p&gt;Everyday we hear about hackers stealing password and accounts. Just one week ago &lt;a href="http://it.slashdot.org/story/14/09/01/2213202/hackers-behind-biggest-ever-password-theft-begin-attacks"&gt;1.2 billion passwords were stolen&lt;/a&gt;, and &lt;a href="http://en.wikipedia.org/wiki/2014_celebrity_pictures_hack"&gt;The Fappening&lt;/a&gt; hacker shown the content of the phone of Jennifer Lawrence, Selena Gomez and many others. Nevertheless we continue to somehow trust the &lt;strong&gt;passwords&lt;/strong&gt;, which are insecure, we often forget them and, finally, we complain when someone hacks our E-mail or Facebook account. Ask yourself:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What can happen and how much time will your waste with a stolen Facebook account? &lt;/li&gt;
&lt;li&gt;Are you using the same password everywhere? If so, do you know how dangerous is it?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this article I will present one of the most secure methods to overcame the old password fashion.&lt;/p&gt;
&lt;iframe width="637" height="358" src="//www.youtube.com/embed/vrQFBYgwQW8" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;em&gt;Video: &lt;a href="http://en.wikipedia.org/wiki/2014_celebrity_pictures_hack"&gt;The Fappening&lt;/a&gt; - Reddit reacting to Jennifer Lawrence nudes&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Why is the same password method so insecure&lt;/h2&gt;
&lt;p&gt;Reusing passwords for email, banking, and social media accounts can lead to identity theft. Imagine an attacker who steals your Twitter account password. What happens if it is different from all the others? Now Imagine the contrary. &lt;/p&gt;
&lt;p&gt;(Extra: &lt;a href="https://howsecureismypassword.net/"&gt;is your password secure?&lt;/a&gt;. This method only checks the length of the password, comparing it with a normal PC attack. It is simplistic.)&lt;/p&gt;
&lt;h2&gt;What's the solution&lt;/h2&gt;
&lt;p&gt;My solution is to use &lt;a href="https://www.mitro.co/"&gt;Mitro&lt;/a&gt;, a project that allows you to generate, store and use different passwords in the websites you normally use. Let me explain better: let's say you want to create a Facebook account. In this case you go to the registration page and Mitro will generate for you a password, which is very difficult and random. This password will be stored in Mitro and the next time you login in Facebook, it will fill the login form for you. &lt;strong&gt;You don't even need to know your own password!!&lt;/strong&gt; Mitro will also generate for you a truly random password, which is not dependent on any personal information or existing word.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Mitro screenshot" src="/images/mitro.png" /&gt;&lt;/p&gt;
&lt;p&gt;I never trusted password managers: &lt;strong&gt;what if someone hacks or find the list of my passwords?&lt;/strong&gt; It's a single point of failure, right? With Mitro this is theoretically not possible. As their &lt;a href="https://www.mitro.co/secure.html"&gt;Security FAQ&lt;/a&gt; says: "Mitro is designed so that only you, and the people you share with, have access to your secrets. Your passwords never leave your computer without being encrypted, so no one, not even Mitro, has access to them". Great!!&lt;/p&gt;
&lt;p&gt;From the moment I gave a try to Mitro, &lt;strong&gt;I deleted all the cookies and changed all the passwords&lt;/strong&gt; of the website I normally use. Mitro saved me!&lt;/p&gt;
&lt;p&gt;Let's try!! First of all I will change the password of Facebook, just to show you how the system works. I generate the password with Mitro and I copy-paste it in the Facebook form. It's a strong password!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Facebook change password" src="/images/stop-password1.png" /&gt;
&lt;img alt="Mitro password generator" src="/images/mitro-passowrd-generation.png" /&gt;
&lt;img alt="Facebook change password2" src="/images/stop-password2.png" /&gt;&lt;/p&gt;
&lt;p&gt;At this point I login. In my case I had a different password saved in Mitro, so I will memorize the new one.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Facebook login" src="/images/stop-password3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Now, when you need to login again in the website, Mitro will take care of the rest&lt;/p&gt;
&lt;p&gt;&lt;img alt="Mitro Facebook login" src="/images/stop-password4.png" /&gt;&lt;/p&gt;
&lt;p&gt;So you will not care about remembering passwords anymore and your internet life will gain a new type of security. You don't trust me? Try it with one website! Try to change a password and use Mitro from that moment, please! After this, share your thoughts with me please. I'm curious/interested :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mitro was recently bought by Twitter&lt;/strong&gt;. The extensions are for Chrome, Safari and Firefox. There is also an iOS app.&lt;/p&gt;
&lt;h2&gt;Why Mitro and not the others?&lt;/h2&gt;
&lt;p&gt;There are many other similar solutions, like &lt;a href="https://lastpass.com/"&gt;LastPass&lt;/a&gt;, so why did I choose Mitro? Especially after the NSA revelations, I seriously reconsidered Open Source in the security field. Open source allows people to read the code, understand if a company uses your informations in a different way but it also helps with getting more eyes on the code. The recent &lt;a href="http://heartbleed.com/"&gt;Hearthbleed bug&lt;/a&gt; proved it: a super small modification in the code allowed a serious security bug which affected the 90% of the websites in Internet, including Facebook. If OpenSSL wasn't Open Source the Heartbleed bug would probably had never been &lt;a href="http://en.wikipedia.org/wiki/Heartbleed#Discovery"&gt;discovered&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mitro is Open Source&lt;/strong&gt;: everyone can review/contribute the code in &lt;a href="https://github.com/mitro-co/mitro"&gt;this github project&lt;/a&gt;. I personally do it.&lt;/p&gt;
&lt;p&gt;Mitro even allows you to &lt;strong&gt;run your own server&lt;/strong&gt;, if you don't trust the Mitro servers!&lt;/p&gt;
&lt;h2&gt;Is it the future?&lt;/h2&gt;
&lt;p&gt;Yes and no. Mitro attacks the problem on the "password side": it allows you to use the websites in the old way, storing your passwords and increasing the security. The future will probably be about using different types of access methods, like &lt;a href="http://oauth.net/"&gt;OAuth&lt;/a&gt;, &lt;a href="https://www.mozilla.org/en-US/persona/"&gt;Mozilla Persona&lt;/a&gt; or &lt;a href="https://medium.com/@ninjudd/passwords-are-obsolete-9ed56d483eb"&gt;considering obsolte the passwords&lt;/a&gt;. All these methods depends on the websites we use, so we can't do anything but wait. &lt;/p&gt;
&lt;p&gt;We just need to wait, using Mitro meanwhile.&lt;/p&gt;
&lt;p&gt;Please, give it a try and share your thoughts :)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco De Nadai</dc:creator><pubDate>Tue, 02 Sep 2014 10:20:00 +0200</pubDate><guid>tag:www.marcodena.it,2014-09-02:blog/stop-remembering-passwords/</guid></item><item><title>Wordpress? The future is static</title><link>http://www.marcodena.it/blog/wordpress-the-future-is-static/</link><description>&lt;p&gt;I was a PHP developer and I lived the blog fashion bubble when everyone made blogs, 
even talking about non-sense. Since that "era" &lt;a href="http://www.wordpress.org"&gt;Wordpress&lt;/a&gt;
established the "standard de-facto" of the blogging platforms. Wordpress is highly
customizable (it has more than 15'000 of plugins), it is used by high profile
websites like &lt;a href="http://www.observer.com/"&gt;The New York Observer&lt;/a&gt; and someone is even
using it as CMS.&lt;/p&gt;
&lt;p&gt;As I said I am a developer since many years ago and I barely managed to build this
portfolio, because usually we have time for others but not for ourselves. Moreover I 
easily get tired: upgrades? bugs? exploits? I really can't handle all these things
anymore, also because I don't use Wordpress anywhere but here.&lt;/p&gt;
&lt;p&gt;I also saw the evolution of Wordpress: from a small and not well written script, 
it became a fancy not well written OOP script. &lt;/p&gt;
&lt;p&gt;Here are some &lt;strong&gt;cons about Wordpress&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exploits! Do you have time to keep it updated? Do you really trust the auto-update
 feature? Be prepared to backup and restore everything.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WYSIWYG?&lt;/strong&gt; I never even liked to write within the administration panel: every time I needed to change the blog template (font), the WYSIWYG was displaying the horrible Times new roman font, misleading me about the real appareances of the post.&lt;/li&gt;
&lt;li&gt;slow: do you really think that in the age when &lt;a href="http://www.mattcutts.com/blog/site-speed/"&gt;Google incorporates site speed in search
 rankings&lt;/a&gt; you are safe? Are you thinking
 about having a high-traffic website? You don't have money to waste?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For all these reasons I came out with static site generators. After half a decade when
people were obsessed by dynamicity, we are finally going back to site generators like
&lt;a href="http://jekyllrb.com/"&gt;Jenkill&lt;/a&gt;, officially supported and &lt;a href="https://github.com/blog/1867-github-pages-now-runs-jekyll-2-2-0"&gt;used by Github&lt;/a&gt; and &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;, the script
used to generate this website. Even thought Jenkill is almost complete, I must admit
that I don't know Ruby and that I prefer the &lt;a href="http://docs.getpelican.com/en/3.4.0/index.html"&gt;Pelican documentation&lt;/a&gt;. Pelican is written in Python.&lt;/p&gt;
&lt;p&gt;These are some &lt;strong&gt;pro of Pelican&lt;/strong&gt; (but they are applicable to all the static website generators):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fast! As it will be explained later, all the speed problems will be solved.&lt;/li&gt;
&lt;li&gt;no database required. &lt;/li&gt;
&lt;li&gt;Users will use a simple text editor and &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;
 syntax to write.&lt;/li&gt;
&lt;li&gt;cheap and easy to host practically anywhere. Amazon S3 and &lt;a href="http://pages.github.com/"&gt;Github pages&lt;/a&gt; (free)
 are the most used choices.&lt;/li&gt;
&lt;li&gt;websites are easy to secure, maintain and scale.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to start&lt;/h2&gt;
&lt;p&gt;The best way to start is understanding how easy is to make a blog. The &lt;a href="http://docs.getpelican.com/en/3.4.0/quickstart.html"&gt;quickstart&lt;/a&gt; is very comprensive. First of all some Python packages are necessary.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The second step is generating the basic structure of the blog.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now it is time to write the &lt;strong&gt;first article&lt;/strong&gt; in Markdown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;

&lt;span class="n"&gt;Following&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;favorite&lt;/span&gt; &lt;span class="n"&gt;mechanical&lt;/span&gt; &lt;span class="n"&gt;keyboard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And save it to "~/projects/yoursite/content/keyboard-review.md". The "content"
directory is made for all the posts and pages and it will not change even if the
blog will be revolutionized.
From the "~/projects/yoursite/" directory, you can launch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The static HTML files will be generated in the output directory. To visit your new
website, just launch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;SimpleHTTPServer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And navigate http://localhost:8000/ in your browser.&lt;/p&gt;
&lt;h2&gt;Performances&lt;/h2&gt;
&lt;p&gt;I am a nerd, I like performances benchmarks. In this plot it is possible to find the performance
of Wordpress and Pelican in a simple hosting of gandi.net, but also Pelican (stati HTMLs) in Amazon S3.&lt;/p&gt;
&lt;p&gt;&lt;img alt="benchmarks" src="/images/benchmark.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt; the tests are made with &lt;a href="http://httpd.apache.org/docs/2.2/programs/ab.html"&gt;Apache ab&lt;/a&gt; via Internet,
so the performance is also affected by the speed of the connection and the congestion on the moment
of the test. The peak in the end is probably caused by this. I am sorry but I could not set up a local server in my PC. &lt;/p&gt;
&lt;h2&gt;Host your website for free&lt;/h2&gt;
&lt;p&gt;If you want to host a website for free, use Github pages. &lt;a href="http://www.circuidipity.com/github-pages.html"&gt;Here&lt;/a&gt; you find a nice tutorial.&lt;/p&gt;
&lt;h2&gt;Sources of this website&lt;/h2&gt;
&lt;p&gt;The sources of this website are available &lt;a href="https://github.com/denadai2/marcodena.it"&gt;here&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco De Nadai</dc:creator><pubDate>Sat, 09 Aug 2014 10:20:00 +0200</pubDate><guid>tag:www.marcodena.it,2014-08-09:blog/wordpress-the-future-is-static/</guid></item></channel></rss>